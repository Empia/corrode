{"version":3,"sources":["../src/variable-stack.js"],"names":[],"mappings":";;;;;;AAAA,OAAO,OAAP;AAAA;AAAA;;AAAA,aAEI,KAFJ,GAEY,CAAC,EAAE,QAAQ,IAAV,EAAgB,OAAO,EAAvB,EAAD,CAFZ;AAAA;;AAAA;AAAA;AAAA,oCAgB6B;AAAA,gBAAf,UAAe,yDAAF,CAAE;;AACrB,gBAAG,aAAa,KAAK,KAAL,CAAW,MAAX,GAAoB,CAApC,EAAsC;AAClC,sBAAM,IAAI,KAAJ,4BAAkC,UAAlC,oBAA0D,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA9E,cAAN;AACH;AACD,mBAAO,KAAK,KAAL,CAAW,KAAK,KAAL,CAAW,MAAX,GAAoB,CAApB,GAAwB,UAAnC,CAAP;AACH;AArBL;AAAA;AAAA,+BAuBwB;AAAA,gBAAf,UAAe,yDAAF,CAAE;;AAChB,mBAAO,KAAK,SAAL,CAAe,UAAf,EAA2B,KAAlC;AACH;AAzBL;AAAA;AAAA,6BA2BS,IA3BT,EA2B0B;AAAA,gBAAX,KAAW,yDAAH,EAAG;;AAClB,gBAAG,OAAO,KAAK,GAAL,CAAS,KAAT,CAAe,IAAf,CAAP,KAAgC,WAAnC,EAA+C;AAC3C,wBAAQ,KAAK,KAAL,CAAW,IAAX,CAAR;AACH,aAFD,MAEO;AACH,qBAAK,GAAL,CAAS,KAAT,CAAe,IAAf,IAAuB,KAAvB;AACH;;AAED,iBAAK,KAAL,CAAW,IAAX,CAAgB;AACZ,wBAAQ,KADI;AAEZ,0BAFY;AAGZ;AAHY,aAAhB;AAKH;AAvCL;AAAA;AAAA,8BAyCS;AACD,gBAAI,WAAW,KAAK,GAApB;AACA,gBAAG,SAAS,MAAZ,EAAmB;AACf,sBAAM,IAAI,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,iBAAK,KAAL,CAAW,GAAX;;AAEA,iBAAK,KAAL,CAAW,SAAS,IAApB,IAA4B,SAAS,KAArC;AACH;AAlDL;AAAA;AAAA,iCAoDY;AACJ,mBAAM,CAAC,KAAK,GAAL,CAAS,MAAhB,EAAuB;AACnB,qBAAK,GAAL;AACH;AACJ;AAxDL;AAAA;AAAA,4BAIa;AACL,mBAAO,KAAK,SAAL,CAAe,CAAf,CAAP;AACH;AANL;AAAA;AAAA,4BAQe;AACP,mBAAO,KAAK,GAAL,CAAS,KAAhB;AACH,SAVL;AAAA,0BAYc,GAZd,EAYkB;AACV,iBAAK,GAAL,CAAS,KAAT,GAAiB,GAAjB;AACH;AAdL;;AAAA;AAAA","file":"variable-stack.js","sourcesContent":["module.exports = class VariableStack {\n\n    stack = [{ isRoot: true, value: {} }];\n\n    get top(){\n        return this.peekLayer(0);\n    }\n\n    get value(){\n        return this.top.value;\n    }\n\n    set value(val){\n        this.top.value = val;\n    }\n\n    peekLayer(layerCount = 1){\n        if(layerCount > this.stack.length - 1){\n            throw new Error(`can't retrieve layer ${layerCount}, stack is ${this.stack.length - 1} layers`);\n        }\n        return this.stack[this.stack.length - 1 - layerCount];\n    }\n\n    peek(layerCount = 1){\n        return this.peekLayer(layerCount).value;\n    }\n\n    push(name, value = {}){\n        if(typeof this.top.value[name] !== 'undefined'){\n            value = this.value[name];\n        } else {\n            this.top.value[name] = value;\n        }\n\n        this.stack.push({\n            isRoot: false,\n            name,\n            value\n        });\n    }\n\n    pop(){\n        let popLayer = this.top;\n        if(popLayer.isRoot){\n            throw new Error('can\\'t pop root layer');\n        }\n\n        this.stack.pop();\n\n        this.value[popLayer.name] = popLayer.value;\n    }\n\n    popAll(){\n        while(!this.top.isRoot){\n            this.pop();\n        }\n    }\n};\n"]}